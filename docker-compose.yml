version: '3.9'
services:
  reverse-proxy:
    image: traefik:v2.10
    command:
      - "--accesslog=true"
      - "--providers.docker"
      - "--providers.file.directory=/configuration/"
      - "--entrypoints.web.address=:80"
      #- "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      #- "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      #- "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      #- "--entrypoints.websecure.address=:443"
    environment:
      - SSL_CERT_CRT=${SSL_CERT_CRT}
      - SSL_CERT_KEY=${SSL_CERT_KEY}
    ports:
      - "80:80"
      #- "443:443"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/configuration/traefik.yml
      - /etc/ssl:/etc/ssl
  # frontend:
  #   build:
  #     context: ./frontend
  #     args:
  #       - API_URL
  #       - API_PATH
  #   expose:
  #     - 80
  #   labels:
  #     - "traefik.http.routers.frontend.priority=101"
  #     - "traefik.http.routers.frontend.tls=true"
  #     - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
  #     - "traefik.http.routers.frontend.middlewares=frontend-middleware"
  #     - "traefik.http.services.frontend.loadbalancer.server.port=80"
  #     - "traefik.http.middlewares.frontend-middleware.stripprefix.prefixes=/"
  #   restart: unless-stopped
  backend:
    build: ./backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PREFIX=${DB_PREFIX}
      - API_KEYS=${API_KEYS}
      - PATH_PREFIX=${PATH_PREFIX}
    expose:
      - 8000
    labels:
      - "traefik.http.routers.backend.priority=1001"
      #- "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.routers.backend.middlewares=backend-middleware"
      - "traefik.http.middlewares.backend-middleware.stripprefix.prefixes=/api"
    restart: unless-stopped
  postgres:
    image: postgres:15.5-alpine
    expose:
      - 5432
    ports:
      # Expose Postgres port we need it for dev purposes should not be exposed publicly
      - '5432:5432'
    restart: always
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_HOST=${DATABASE_HOST}
  pgadmin:
      container_name: pgadmin4_mast
      image: dpage/pgadmin4
      restart: always
      environment:
        PGADMIN_DEFAULT_EMAIL: enacit4research@epfl.ch
        PGADMIN_DEFAULT_PASSWORD: password
      ports:
        - "5050:5050"
        - "5080:80"
        - "5443:443"
      extra_hosts:
        - "host.docker.internal:host-gateway"
volumes:
  postgres:
    driver: local
